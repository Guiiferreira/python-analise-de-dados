# -*- coding: utf-8 -*-
"""Tipo_da_informacao-comando_round-comando_len-fatiamento_de_string-manipulacao_de_string.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14gDqjwuxroxErkemOxiPmYWLpASxw3He

# TIPO DA INFORMACAO

1 - TEXT TYPE:STR\
2 - SEQUENCE TYPES: LIST, TUPLE, RANGE\
3- NUMERIC TYPES : INT, FLOAT, COMPLEX\
4- MAPPING TYPE: DICT\
5 -SET TYPES : SET, FROZENSET\
6 -BOOLEAN TYPE : BOOL\
7 -VINARY TYPES : BYTES, BYTEARRAY, MEMORYVIEW
"""

string = str('ola mundo')
inteiro = int( 10 )
fluante = float ( 100.5)
Complex = complex( 1j)
Lista = list(('Maça', 'Morango'))
Tupla = tuple(('A', 'B'))
Range = range(6)
Dicionario = dict(nome='Maria', idade=20)
Set = set(('A', 'B', 'C'))
Fronzenset = frozenset(('A', 'B', 'C'))
Booleano = bool(5)
Bytes = bytes(5)
ByteArray = bytearray(5)
Memoryview = memoryview(bytes(5))

from datetime import datetime
Data = datetime.today().date()

type (inteiro)

"""# Comando round
quando trabalhamos com números flutuantes, podemos arrendondar o valor usando um comando nativo do python\
round(valor, número de casas)
arrendondar para o valor mais próximo
"""

# comando round
valor_exemplo = 12.123456789

print(valor_exemplo)

round(valor_exemplo,4)

"""# Comando len
as funçao len() retorna a quantidade de elementos de qualquer lista em python, essa é a mais uma funçao buiit-in e disponível em qualquer parte dos nos códigos.
"""

Lista = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Dicionario =  {'nome': 'Maria', 'idade': 20}
Tupla = (1, 2, 3)
String = 'Olá Mundo!'

len( string )

"""# Fatiamento de string
strings sao listas de bytes reperesentando caracteres.\
podemos acessar suas posicoes usando colhetes\

String[posicao inicial : posicao final]

"""

Minha_String = 'Aprender Python é TOP!'

Data = '10 mar 2021 - 12:30'
CPF ='CPF : 123456789'

print(type(Minha_String))
print(len(Minha_String))

Minha_String[6]

Minha_String[0:8]

CPF[-9:]

"""# Manipulação de string

1 replace()\
2 startswith()\
3endswith()\
4 count()\
5 capitalize()\
6 isdigit ()\
7 isalnum ()\
8 upper()\
9 lower ()\
10 find ()\
11 strip ()\
14 split ()
"""

String = 'Guilherme'
 print(String)

# verificar o tamanho da string
len(String)

# tipo
type(String)

#concatenar uma string
String + ' Ferreira'

# replace == substituir algo
String.replace('Guilherme', 'Marta')

CPF = 'CPF = 123456789'

int(CPF.replace('CPF = ', ''))

#VERIFICARO COMEÇO
String.startswith('Guilherme')

#VERIFICAR O FIM
String.endswith('e')

# contar palavrar/ letras
String.count('e')

# transformaçao minuscula para maiuscula
Nome = 'gui'

Nome.capitalize()

# verificar digitos / valor numerico
String_Cpf = '123456789'
String_Cpf.isdigit()

# verificar ALFANUMERIC
String.isalnum()

#transformar tudo para maiusculo
Nome = 'gui'
Nome.upper()

#Transformar tudo para minusculo
Nome = 'GUI'
Nome.lower()

#localozar algo especifico dentro da minha frase
Frase = 'Hoje o dia está calor!'
Frase.find('Hoje')

Endereço = 'R Augusto 120, SP '
#remor espaços
Endereço.strip()

# quebra a nossa string
Palavra = 'rua vila cova de alva, centro, sp'
Palavra.split(' ')



